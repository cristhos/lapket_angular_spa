{"version":3,"file":"/home/lithos/Data/Lab/codash/angularSpa/src/app/user/form/registration/register-final.form.component.ts","sources":["/home/lithos/Data/Lab/codash/angularSpa/src/app/user/form/registration/register-final.form.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA4D;AAE5D,0CAAyC;AAEzC,2DAA0D;AAC1D,6DAAgE;AAChE,4EAA2E;AAC3E,mEAAkE;AAOlE,IAAa,0BAA0B;IAmBrC,oCACc,WAAyB,EACzB,cAA+B,EAC/B,WAAyB,EAC1B,MAAc;QAHb,gBAAW,GAAX,WAAW,CAAc;QACzB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,gBAAW,GAAX,WAAW,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QAlB3B,YAAO,GAAG,KAAK,CAAC;QAIhB,YAAO,GAAG;YACA;gBACE,MAAM,EAAC,GAAG;gBACV,MAAM,EAAC,OAAO;aACf;YACD;gBACE,MAAM,EAAC,GAAG;gBACV,MAAM,EAAC,OAAO;aACf;SACD,CAAC;QAcX,UAAK,GAAG,IAAI,4CAAsB,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;QACxD,cAAS,GAAG,KAAK,CAAC;IAThB,CAAC;IAEH,6CAAQ,GAAR;QAEE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAID,6CAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1C,UAAA,IAAI;YACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC,EACD,UAAA,KAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,KAAK,GAAG,IAAI,4CAAsB,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAC,KAAI,CAAC,KAAK,CAAC,OAAO,EAAC,KAAI,CAAC,KAAK,CAAC,IAAI,EAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACpH,CAAC,EACD;YACE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,sBAAI,kDAAU;aAAd,cAAmB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAEvD,iDAAY,GAAZ;QAAA,iBAiBC;QAhBC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CACxC,UAAA,IAAI;YACF,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YACtC,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,EACD,UAAA,KAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,EACD;YACE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,qDAAgB,GAAhB,UAAiB,UAAU;QAA3B,iBAmBC;QAjBC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,SAAS,CACrD,UAAA,IAAI;YACF,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YACnC,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,EACD,UAAA,KAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,EACD;YACE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,6CAAQ,GAAR,UAAS,MAAM;QAEb,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,iDAAY,GAAZ,UAAa,MAAM;QAEjB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,8CAAS,GAAT;QACE,EAAE,CAAA,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAK,CAAC,CAAA,CAAC;YACrH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC;QAAA,IAAI,CAAA,CAAC;YACJ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,mDAAc,GAAd;QACE,yBAAyB;QACzB,EAAE,CAAA,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,CAAA,CAAC;YAC7B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAEH,iCAAC;AAAD,CAAC,AAxHD,IAwHC;AAxHY,0BAA0B;IALtC,gBAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,WAAW,EAAE,sCAAsC;KACpD,CAAC;qCAsB4B,0BAAW;QACR,gCAAc;QACjB,0BAAW;QAClB,eAAM;GAvBhB,0BAA0B,CAwHtC;AAxHY,gEAA0B","sourcesContent":["import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { NgForm }    from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport {  UserService } from '../../service/user.service';\nimport {  RegisterFinalFormModel } from './register-final.form';\nimport {  CountryService } from '../../../country/service/country.service';\nimport {  CityService } from '../../../city/service/city.service';\n\n@Component({\n  selector: 'register-final-form',\n  templateUrl: './register-final.form.component.html',\n})\n\nexport class RegisterFinalFormComponent implements OnInit{\n  user ;\n  categories ;\n  countries;\n  cities;\n  loading = false;\n  form_completed : boolean;\n  countries_loading : boolean;\n  cities_loading : boolean;\n  genders = [\n            {\n              'type':'m',\n              'name':\"Homme\"\n            },\n            {\n              'type':'f',\n              'name':\"Femme\"\n            },\n           ];\n  constructor(\n        private userService : UserService,\n        private countryService : CountryService,\n        private cityService : CityService,\n        public router: Router\n  ){}\n\n  ngOnInit()\n  {\n    this.checkForm();\n    this.getCountries();\n  }\n\n  model = new RegisterFinalFormModel(null,null,null,null);\n  submitted = false;\n  onSubmit() {\n    this.loading = true;\n    this.userService.putUser(this.model).subscribe(\n        data => {\n          this.router.navigate(['/']);\n          window.location.reload();\n        },\n        error => {\n          console.log(error);\n          this.model = new RegisterFinalFormModel(this.model.fullName,this.model.country,this.model.city,this.model.gender);\n        },\n        () =>{\n          console.log(\"finish\");\n        }\n    );\n    this.loading = false;\n  }\n\n  get diagnostic() { return JSON.stringify(this.model); }\n\n  getCountries (){\n    this.countries_loading = true;\n    this.countryService.getCountries().subscribe(\n        data => {\n          this.countries = data._embedded.items;\n          this.countries_loading = false;\n        },\n        error => {\n          console.log(error);\n          this.countries_loading = false;\n        },\n        () =>{\n          console.log(\"finish\");\n          this.countries_loading = false;\n        }\n    );\n    this.checkForm();\n  }\n\n  getCitiesCountry(country_id)\n  {\n    this.cities_loading = true;\n      this.cityService.getCitiesCountry(country_id).subscribe(\n        data => {\n          this.cities = data._embedded.items;\n          this.cities_loading = false;\n          this.resolveCountry();\n        },\n        error => {\n          console.log(error);\n          this.cities_loading = false;\n        },\n        () =>{\n          console.log(\"finish\");\n          this.cities_loading = false;\n        }\n    );\n    this.checkForm();\n  }\n\n  onSelect($event)\n  {\n    this.getCitiesCountry($event.target.value);\n    this.checkForm();\n  }\n\n  onSelectCity($event)\n  {\n    this.checkForm();\n  }\n\n  checkForm(){\n    if(this.model.fullName != null && this.model.gender != null && this.model.country != null && this.model.city != null ){\n      this.form_completed = true;\n    }else{\n      this.form_completed = false;\n    }\n  }\n\n  resolveCountry(){\n    //resolve mobile loading \n    if(this.model.country != null){\n      this.getCitiesCountry(this.model.country);\n    }\n  }\n\n}\n"]}