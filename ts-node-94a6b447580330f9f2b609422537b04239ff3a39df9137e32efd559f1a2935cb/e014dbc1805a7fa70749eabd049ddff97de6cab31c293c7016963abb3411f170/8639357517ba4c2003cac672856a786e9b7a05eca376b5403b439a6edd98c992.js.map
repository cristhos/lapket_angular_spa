{"version":3,"file":"/home/lithos/Data/Lab/codash/angularSpa/src/app/product/form/product.form.component.ts","sources":["/home/lithos/Data/Lab/codash/angularSpa/src/app/product/form/product.form.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy, ViewChild, NgZone,ChangeDetectorRef } from '@angular/core';\nimport { NgForm }    from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FileUploader } from 'ng2-file-upload';\n\nimport { ProductFormModel } from './product.form';\nimport { CategoryService } from '../../category/service/category.service';\nimport { ProductService } from '../service/product.service';\nimport { ApiUrlService } from '../../utils/api-url.service';\nimport { ImageResizerService } from '../../utils/image-resizer.service';\nimport {ImageCropperComponent, CropperSettings} from 'ng2-img-cropper';\n\n@Component({\n  selector: 'product-form',\n  templateUrl: './product.form.component.html',\n  styleUrls:['./product.form.component.css'] \n})\n\nexport class ProductFormComponent implements OnInit{\n \n  categories:Object;\n  product : any;\n  form_album = false;\n  loading = false;\n  sub;\n  model;\n  file_src;\n  request : boolean;\n  formElement = false;\n  public uploader:FileUploader = new FileUploader({url:this.apiUrlService.getBaseUrl()+'/api/picture/pictures.json'});\n  data: any;\n  cropperSettings;\n  @ViewChild('cropper', undefined) \n  cropper:ImageCropperComponent;\n\n  constructor(\n    private categoryService : CategoryService,\n    private productService: ProductService,\n    public router: Router,\n    private route: ActivatedRoute,\n    private apiUrlService : ApiUrlService,\n    private imageResizerService : ImageResizerService,\n  ) {\n        \n  }\n\n  initCropper(){\n        this.cropperSettings = new CropperSettings();\n        this.cropperSettings.noFileInput = true;\n        this.cropperSettings.width = 500;\n        this.cropperSettings.height = 350;\n        this.cropperSettings.croppedWidth =500;\n        this.cropperSettings.croppedHeight =350; \n        this.cropperSettings.width = 500;\n        this.cropperSettings.height = 350;\n        this.data = {};\n  }\n\n   ngOnInit(){\n     //$('.materialboxed').materialbox();\n     this.getProductDetail();\n     this.getCategory();\n     this.initCropper();\n\n   }\n\n  getCategory(){\n    let limit=25;\n    this.categoryService.getCategory(limit).subscribe(\n        data => this.categories = data._embedded.items,\n        error => console.log(error),\n        () => console.log(\"finish\")\n    );\n  }\n\n   onSubmit(): void {\n      this.loading = true;\n\n      let filecropper = [] ;\n      filecropper.push(this.imageResizerService.dataURLtoFile(this.cropper.image.image, 'p_product.png'));\n      this.uploader.addToQueue(filecropper);\n      this.uploader.uploadAll();\n      this.uploader.onCompleteItem = (item:any, response:any, status:any, headers:any) => {\n           let data = JSON.parse(response);\n           this.model.picture = data.id;\n\n           if(this.model.picture != null){\n             if(this.product == null){\n                this.postProduct();\n             }else{\n               console.log(\"ok\");\n               this.putProduct();\n             } \n           }\n      };\n\n      if(this.product != null) this.putProduct();\n   }\n\n   postProduct()\n   {\n         this.productService.postProduct(this.model).subscribe(\n           data =>{\n             this.model = new ProductFormModel(null,'',0,null);\n             this.product = data;\n             this.router.navigate(['/product',data.id]);\n           },\n           error => console.log(error),\n           () => console.log(\"finish\")\n       );\n        this.loading = false;\n   }\n\n   putProduct()\n   {\n      \n      this.productService.putProduct(this.model, this.product.id).subscribe(\n           data =>{\n             this.model = new ProductFormModel(null,'',0,null);\n             this.product = data;\n             this.router.navigate(['/product',data.id]);\n           },\n           error => console.log(error),\n           () => console.log(\"finish\")\n      );\n      this.loading = false;\n   }\n\n\n   get diagnostic() { return JSON.stringify(this.model); }\n\n   \n\n   getProductDetail()\n   {\n     this.sub = this.route.params.subscribe(params => {\n       let id = +params['id'];\n       if(id){\n         this.productService.getProductDetail(id).subscribe(\n             data =>{\n               this.product = data;\n               this.model = new ProductFormModel(data.picture.id,data.description,data.price,data.category.id);\n               this.file_src = data.picture.web_path;\n               this.request = true;\n             },\n             error => console.log(error),\n             () => console.log(\"finish\")\n         );\n       }else{\n          this.model = new ProductFormModel(null,'',0,null);\n          this.request = true;\n       }\n     });\n   }\n\n   onHover(){\n     if(this.formElement==false) this.formElement = true;\n   }\n   showElement(){\n      if(this.formElement==false) this.formElement = true;\n   }\n   closeElement(){\n      if(this.formElement==true) this.formElement = false;\n   }\n   fileChangeListener($event) {\n    this.showElement();\n    var image:any = new Image();\n    var file:File = $event.target.files[0];\n\n    \n    var myReader:FileReader = new FileReader();\n    var that = this;\n    myReader.onloadend = function (loadEvent:any) {\n        image.src = loadEvent.target.result;\n        that.cropper.setImage(image);\n    };\n    myReader.readAsDataURL(file);\n   }\n  \n}\n"]}