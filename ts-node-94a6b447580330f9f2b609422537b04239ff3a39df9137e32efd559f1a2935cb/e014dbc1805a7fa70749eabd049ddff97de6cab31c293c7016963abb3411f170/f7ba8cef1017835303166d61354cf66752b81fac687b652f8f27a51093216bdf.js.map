{"version":3,"file":"/home/lithos/Data/Lab/codash/angularSpa/src/server.ts","sources":["/home/lithos/Data/Lab/codash/angularSpa/src/server.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAC1B,kCAAgC;AAChC,4DAA8E;AAC9E,sCAA8C;AAC9C,qGAAgG;AAChG,iCAAmC;AACnC,yBAAkC;AAClC,6BAA4B;AAE5B,IAAM,IAAI,GAAG,IAAI,CAAC;AAElB,qBAAc,EAAE,CAAC;AAEjB,IAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AAEtB,IAAI,QAAQ,GAAG,iBAAY,CAAC,WAAI,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AAEpF,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,UAAC,CAAC,EAAE,OAAO,EAAE,QAAQ;IACtC,IAAM,IAAI,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IAE1D,qCAAmB,CAAC,sDAAwB,EAAE,IAAI,CAAC;SAChD,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,EAApB,CAAoB,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AAC/B,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;AAEvB,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,WAAI,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AAE9D,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,GAAG;IACpB,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,GAAG,KAAA,EAAE,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;IACf,OAAO,CAAC,GAAG,CAAC,mCAAiC,IAAI,MAAG,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC","sourcesContent":["import 'reflect-metadata';\nimport 'zone.js/dist/zone-node';\nimport { platformServer, renderModuleFactory } from '@angular/platform-server'\nimport { enableProdMode } from '@angular/core'\nimport { AppServerModuleNgFactory } from '../dist/ngfactory/src/app/app.server.module.ngfactory'\nimport * as express from 'express';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\nconst PORT = 4000;\n\nenableProdMode();\n\nconst app = express();\n\nlet template = readFileSync(join(__dirname, '..', 'dist', 'index.html')).toString();\n\napp.engine('html', (_, options, callback) => {\n  const opts = { document: template, url: options.req.url };\n\n  renderModuleFactory(AppServerModuleNgFactory, opts)\n    .then(html => callback(null, html));\n});\n\napp.set('view engine', 'html');\napp.set('views', 'src')\n\napp.get('*.*', express.static(join(__dirname, '..', 'dist')));\n\napp.get('*', (req, res) => {\n  res.render('index', { req });\n});\n\napp.listen(PORT, () => {\n  console.log(`listening on http://localhost:${PORT}!`);\n});"]}