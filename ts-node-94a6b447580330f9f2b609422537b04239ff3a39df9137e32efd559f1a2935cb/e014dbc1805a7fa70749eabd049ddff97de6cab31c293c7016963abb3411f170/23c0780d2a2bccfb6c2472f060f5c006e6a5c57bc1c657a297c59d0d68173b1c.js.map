{"version":3,"file":"/home/lithos/Data/Lab/codash/angularSpa/src/app/user/form/profile/profile.form.component.ts","sources":["/home/lithos/Data/Lab/codash/angularSpa/src/app/user/form/profile/profile.form.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy,ViewChild } from '@angular/core';\nimport { NgForm }    from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FileUploader } from 'ng2-file-upload';\n\nimport {  UserService } from '../../service/user.service';\nimport {  ProfileFormModel } from './profile.form';\nimport { ApiUrlService } from '../../../utils/api-url.service';\nimport { ImageResizerService } from '../../../utils/image-resizer.service';\nimport {  CountryService } from '../../../country/service/country.service';\nimport {  CityService } from '../../../city/service/city.service';\nimport {ImageCropperComponent, CropperSettings} from 'ng2-img-cropper';\n\n@Component({\n  selector: 'profile-form',\n  templateUrl: './profile.form.component.html',\n})\n\nexport class ProfileFormComponent implements OnInit{\n  user : any;\n  model ;\n  picture_id:number;\n  file_src;\n  categories;\n  countries;\n  cities;\n   // file upluad\n  public uploader:FileUploader = new FileUploader({url:this.apiUrlService.getBaseUrl()+'/api/picture/pictures.json'});\n  data: any;\n  cropperSettings;\n  @ViewChild('cropper', undefined) \n  cropper:ImageCropperComponent;\n  genders = [\n            {\n              'type':'m',\n              'name':\"Homme\"\n            },\n            {\n              'type':'f',\n              'name':\"Femme\"\n            },\n           ];\n  constructor(private userService : UserService, \n              public router: Router, \n              private imageResizerService : ImageResizerService,\n              private apiUrlService : ApiUrlService,\n              private countryService : CountryService,\n              private cityService : CityService,\n              ) {\n\n        this.cropperSettings = new CropperSettings();\n        this.cropperSettings.noFileInput = true;\n        this.cropperSettings.width = 160;\n        this.cropperSettings.height = 160;\n        this.cropperSettings.croppedWidth =160;\n        this.cropperSettings.croppedHeight =160; \n        this.cropperSettings.width = 160;\n        this.cropperSettings.height = 160;\n        this.data = {};\n  }\n\n  ngOnInit(){\n    this.getInitialUser();\n    this.getCountries();\n  }\n\n  submitted = false;\n\n  getInitialUser(){\n    this.userService.getUserSession().subscribe(\n        data =>{\n          this.user = data;\n          this.hydrateModel(this.user);\n          this.getCitiesCountry(this.user.country.id);\n        },\n        error => console.log(error),\n        () => console.log(\"finish\")\n    );\n  }\n\n  hydrateModel(user){\n    this.model = new ProfileFormModel(\n                  null,\n                  user.username,\n                  user.email,\n                  user.full_name,\n                  user.country.id,\n                  user.city.id,\n                  user.gender,\n                  user.language,\n                  user.phone_number,\n                  user.birthday,\n                  user.description,\n                  user.web_site,\n                  user.is_mail_notify\n                  );\n   }\n\n\n  onSubmit() {\n    let is_upload = false;\n    \n    if(this.cropper.image.image != null){\n          let filecropper = [] ;\n    \n        filecropper.push(this.imageResizerService.dataURLtoFile(this.cropper.image.image, 'p_profile.png'));\n        this.uploader.addToQueue(filecropper);\n        this.uploader.uploadAll();\n\n        this.uploader.onCompleteItem = (item:any, response:any, status:any, headers:any) => {\n                let data = JSON.parse(response);\n                this.model.picture = data.id;\n\n              if(this.model.picture != null){\n                is_upload = true;\n                this.putUser();\n              }\n          };\n    }\n\n    if(is_upload == false) this.putUser();\n  }\n\n  putUser(){\n    this.userService.putUser(this.model).subscribe(\n        data => {\n          this.router.navigate(['user/',data.username]);\n        },\n        error => {\n          console.log(error);\n          this.getInitialUser();\n        },\n        () => console.log(\"finish\")\n    );\n    this.submitted = true;\n  }\n  get diagnostic() { return JSON.stringify(this.model); }\n\n  \n  fileChange($event){\n     this.readFiles($event.target.files);\n  }\n\n  readFiles(files, index=0){\n    let reader = new FileReader();\n\n    if (index in files){  \n        this.imageResizerService.readFile(files[index], reader, (result) =>{\n\n        let img = document.createElement(\"img\");\n        img.src = result;\n\n        this.imageResizerService.resize(img, 96, 96, (resized_img)=>{ \n          this.file_src = resized_img;\n        });\n      });\n    }\n  }\n\n  getCountries (){\n    this.countryService.getCountries().subscribe(\n        data => {\n          this.countries = data._embedded.items;\n        },\n        error => {\n          console.log(error);\n        },\n        () =>{\n          console.log(\"finish\");\n        }\n    );\n  }\n\n  getCitiesCountry(country_id)\n  {\n      this.cityService.getCitiesCountry(country_id).subscribe(\n        data => {\n          this.cities = data._embedded.items;\n        },\n        error => {\n          console.log(error);\n        },\n        () =>{\n          console.log(\"finish\");\n        }\n    );\n  }\n\n  onSelect($event)\n  {\n    this.getCitiesCountry($event.target.value);\n  }\n\n  fileChangeListener($event) {\n    var image:any = new Image();\n    var file:File = $event.target.files[0];\n\n    \n    var myReader:FileReader = new FileReader();\n    var that = this;\n    myReader.onloadend = function (loadEvent:any) {\n        image.src = loadEvent.target.result;\n        that.cropper.setImage(image);\n    };\n    myReader.readAsDataURL(file);\n   }\n}\n"]}