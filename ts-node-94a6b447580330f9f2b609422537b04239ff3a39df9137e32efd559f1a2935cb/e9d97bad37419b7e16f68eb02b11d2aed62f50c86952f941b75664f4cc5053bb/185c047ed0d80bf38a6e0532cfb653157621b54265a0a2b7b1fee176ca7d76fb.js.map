{"version":3,"file":"/home/lithos/Data/Lab/codash/angularSpa/src/app/user/service/user.service.ts","sources":["/home/lithos/Data/Lab/codash/angularSpa/src/app/user/service/user.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable }    from '@angular/core';\nimport { Http, Response} from '@angular/http';\nimport { environment } from '../../../environments/environment';\nimport '../../rxjs-operators';\n\n\n@Injectable()\nexport class UserService {\n  baseUrl: string = environment.LAPKET_API_URL;\n  tokenUrl : string;\n  url: any;\n  access_token: string ;\n  //authentification_pro\n  isLoggedIn: boolean = false; // L'utilisateur est-il connecté ?\n  redirectUrl: string; // où rediriger l'utilisateur après l'authentification ?\n  client_id :string;\n  client_secret: string;\n  request : boolean = false; // avons nous verififier si l'utilisateur et connecté\n\n  constructor(private http: Http){\n    this.tokenUrl = this.baseUrl + \"/api/oauth/v2/token\"\n    this.baseUrl = this.baseUrl + '/api/user';\n    this.access_token = localStorage.getItem('access_token');\n  }\n\n  getClientId(){\n    if (environment.production) {\n      this.client_id = \"1_g1bs2j3lra0cs4goo4ss084wksskgk4gok8wsk48kkw48ksk4\";\n    } else {\n      this.client_id = \"1_3vze4od93m4g4k0coc48w4k0go4owcggs8kc4048w4sosoc4o4\";\n    }\n    return this.client_id;\n  }\n\n  getClientSecret(){\n     if (environment.production) {\n      this.client_secret = \"47iyfy5o17gg0sso8og000wck4484swk8go0wos04ggc8s8ss0\";\n    } else {\n      this.client_secret = \"nvh0vprhc1wgssg08cks448w04g0o0owo8woc8ckw0ow048c4\";\n    }\n    return this.client_secret;\n  }\n\n  login(user : any){\n      this.tokenUrl = this.tokenUrl \n                      +\"?client_id=\"+this.getClientId()\n                      +\"&client_secret=\"+this.getClientSecret()\n                      +\"&username=\"+user.username\n                      +\"&password=\"+user.password\n                      +'&grant_type=password';\n\n      return this.http\n               .get(this.tokenUrl)\n               .map(res => res.json());\n  }\n\n  facebookConnect(user:any){\n      this.url =  this.baseUrl + '/facebook/check-facebook.json';\n      let body = JSON.stringify(user);\n      return this.http\n                 .post(this.url,body)\n                 .map(res => res.json())\n      ;\n  }\n\n  googleConnect(user:any){\n      this.url =  this.baseUrl + '/google/check-google.json';\n      let body = JSON.stringify(user);\n      return this.http\n                 .post(this.url,body)\n                 .map(res => res.json())\n      ;\n  }\n\n  getRefreshToken(){\n      this.tokenUrl = this.tokenUrl \n                      +\"?client_id=\"+this.getClientId()\n                      +\"&client_secret=\"+this.getClientSecret()\n                      +\"&refresh_token=\"+localStorage.getItem('refresh_token')\n                      +'&grant_type=refresh_token';\n\n      return this.http\n               .get(this.tokenUrl)\n               .map(res => res.json());\n  }\n\n  register( user : any){\n      this.url = this.baseUrl +'/users.json';\n      let body = JSON.stringify(user);\n      return this.http\n                 .post(this.url,body)\n                 .map(res => res.json())\n      ;\n  }\n\n  putUser(user:any){\n    this.url = this.baseUrl + '/user.json';\n    let body = JSON.stringify(user);\n\n    return this.http\n               .put(this.url,body)\n               .map(res => res.json());\n  }\n\n\n  putPassword(model:any){\n    this.url = this.baseUrl + '/password?';\n    let body = JSON.stringify(model);\n\n    return this.http\n               .put(this.url,body)\n               .map(res => res.json());\n  }\n\n  getUserSession(){\n    this.url = this.baseUrl + '/user/status.json';\n    return this.http\n               .get(this.url)\n               .map(res => res.json())\n    ;\n  }\n\n  getPasswordRequestReset(email){\n    let host = window.location.origin + '/user/c/change-password';\n    this.url = this.baseUrl + '/passwords/requests/reset.json?slug='+email+'&host='+host;\n    return this.http\n               .get(this.url)\n               .map(res => res.json())\n    ;\n  }\n\n  getUserMiniSugestion(page: number){\n    let limit = 3;\n    this.url = this.baseUrl + '/user/sugestions.json?page='+page+'&limit='+limit;\n    return this.http\n               .get(this.url)\n               .map(res => res.json())\n    ;\n  }\n\n  getUserSugestion(page: number){\n    let limit = 8;\n    this.url = this.baseUrl + '/user/sugestions.json?page='+page+'&limit='+limit;\n    return this.http\n               .get(this.url)\n               .map(res => res.json());\n  }\n\n  getUser(username: string){\n\n    this.url = this.baseUrl + '/users/'+username+'.json';\n    return this.http\n               .get(this.url)\n               .map(res => res.json());\n  }\n\n  getFollowerAuthor(username: string){\n\n    this.url = this.baseUrl + '/followers/'+username+'.json';\n\n    return this.http\n               .get(this.url)\n               .map(res => res.json());\n  }\n  getFollowingAuthor(username: string){\n\n    this.url = this.baseUrl + '/followings/'+username+'.json';\n    return this.http\n               .get(this.url)\n               .map(res => res.json());\n  }\n\n  postFollow(user_id: number){\n\n     this.url = this.baseUrl + '/followers/'+user_id+'.json';\n     let body = JSON.stringify({user_id});\n     return this.http\n               .post(this.url,body)\n               .map(res => res.json());\n  }\n\n  removeFollow(user_id: number){\n    this.url = this.baseUrl + '/followers/'+user_id+'/remove.json';\n    return this.http\n               .get(this.url)\n               .map(res => res.json())\n    ;\n  }\n\n  logout(){\n        this.url = this.baseUrl + '/user/logouts.json';\n        return this.http\n               .get(this.url)\n               .map(res => res.json())\n        ;\n\n  }\n}\n"]}