{"version":3,"file":"/home/lithos/Data/Lab/codash/angularSpa/src/app/search/form/search.form.component.ts","sources":["/home/lithos/Data/Lab/codash/angularSpa/src/app/search/form/search.form.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAyD;AAEzD,0CAAwC;AAExC,6CAAgD;AAChD,yEAAuE;AASvE,IAAa,mBAAmB;IAG9B,6BAAoB,cAA+B,EAAU,MAAe;QAAxD,mBAAc,GAAd,cAAc,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAS;QAF5E,YAAO,GAAG,KAAK,CAAC;QAIf,UAAK,GAAG,IAAI,6BAAe,CAAC,EAAE,CAAC,CAAC;IAF6C,CAAC;IAI9E,oDAAoD;IACpD,sCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,oCAAM,GAAN,UAAO,IAAI;QACP;;;;;;;;;;;;;;;;QAgBA;IACJ,CAAC;IAED,sBAAI,2CAAU;aAAd,cAAmB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC1D,0BAAC;AAAD,CAAC,AAjCD,IAiCC;AAjCY,mBAAmB;IAN/B,gBAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,WAAW,EAAE,8BAA8B;QAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;KAC3C,CAAC;qCAKqC,gCAAc,EAAmB,eAAM;GAHjE,mBAAmB,CAiC/B;AAjCY,kDAAmB","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { NgForm }    from '@angular/forms';\nimport { Router} from '@angular/router';\n\nimport { SearchFormModel } from './search.form';\nimport { ProductService } from '../../product/service/product.service';\n\n\n@Component({\n  selector: 'search-form',\n  templateUrl: './search.form.component.html',\n  styleUrls: ['./search.form.component.css']\n})\n\nexport class SearchFormComponent {\n  loading = false;\n  resultats;\n  constructor(private productService : ProductService, private router : Router){}\n\n   model = new SearchFormModel('');\n\n   //when user submit form is redirect to de searchpage\n   onSubmit(): void {\n     this.router.navigate(['/search/'+this.model.term]);\n   }\n\n   search(term){\n       /*\n       let page=1;\n       this.loading = true;\n        this.productService.search(this.model.term,page).subscribe(\n         data =>{\n           this.resultats = data._embedded.items;\n         },\n         error =>{\n            this.loading = false;\n            console.log(error);\n         },\n         () =>{\n           this.loading = false;\n           console.log(\"finish\");\n         }\n     );\n     */\n   }\n\n   get diagnostic() { return JSON.stringify(this.model); }\n}\n"]}