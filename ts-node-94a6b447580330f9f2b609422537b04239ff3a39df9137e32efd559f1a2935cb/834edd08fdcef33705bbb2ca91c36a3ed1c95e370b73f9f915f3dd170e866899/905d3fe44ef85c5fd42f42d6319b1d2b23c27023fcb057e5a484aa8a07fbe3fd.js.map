{"version":3,"file":"/home/lithos/Data/Lab/codash/angularSpa/src/app/user/form/registration/register.form.component.ts","sources":["/home/lithos/Data/Lab/codash/angularSpa/src/app/user/form/registration/register.form.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA6D;AAE7D,0CAAyC;AAEzC,2DAA0D;AAE1D,iDAAqD;AAOrD,IAAa,qBAAqB;IAKhC,+BAAoB,WAAyB,EAAS,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAc;QAAS,WAAM,GAAN,MAAM,CAAQ;QAHpE,YAAO,GAAG,KAAK,CAAC;QACT,aAAQ,GAAW,2BAA2B,CAAC;QAItD,UAAK,GAAG,IAAI,iCAAiB,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;QACzC,cAAS,GAAG,KAAK,CAAC;IAHqD,CAAC;IAMxE,wCAAQ,GAAR;QAAA,iBAwCC;QAvCC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC3C,UAAA,IAAI;YACF,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAClC,UAAA,IAAI;gBACF,YAAY,CAAC,KAAK,EAAE,CAAC;gBACrB,YAAY,CAAC,OAAO,CAAC,SAAS,EAAG,GAAG,CAAC,CAAC;gBACtC,YAAY,CAAC,OAAO,CAAC,cAAc,EAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACzD,YAAY,CAAC,OAAO,CAAC,YAAY,EAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBACrD,YAAY,CAAC,OAAO,CAAC,YAAY,EAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACvD,YAAY,CAAC,OAAO,CAAC,eAAe,EAAG,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC3D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAC3B,CAAC,EACD,UAAA,KAAK;gBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC,EACD;gBACE,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACxB,CAAC,CACJ,CAAC;QACJ,CAAC,EACD,UAAA,KAAK;YACH,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,KAAK,GAAG,IAAI,iCAAiB,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,EAAC,EAAE,CAAC,CAAC;YACxD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EACD;YACE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAExB,CAAC;IAED,sBAAI,6CAAU;aAAd,cAAmB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACzD,4BAAC;AAAD,CAAC,AAtDD,IAsDC;AAtDY,qBAAqB;IALjC,gBAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,WAAW,EAAE,gCAAgC;KAC9C,CAAC;qCAOkC,0BAAW,EAAiB,eAAM;GALzD,qBAAqB,CAsDjC;AAtDY,sDAAqB","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm }    from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport {  UserService } from '../../service/user.service';\nimport {  CategoryService } from '../../../category/service/category.service';\nimport {  RegisterFormModel } from './register.form';\n\n@Component({\n  selector: 'register-form',\n  templateUrl: './register.form.component.html',\n})\n\nexport class RegisterFormComponent {\n  user : Object;\n  loading = false;\n  public barLabel: string = \"Sécurité du mot de passe:\";\n\n  constructor(private userService : UserService, public router: Router) {}\n\n  model = new RegisterFormModel(null,null);\n  submitted = false;\n  response ;\n\n  onSubmit() {\n    this.loading = true;\n    this.userService.register(this.model).subscribe(\n        data => {\n          this.response = 200;\n          this.userService.login(data).subscribe(\n              data => {\n                localStorage.clear();\n                localStorage.setItem(\"authent\" , \"O\");\n                localStorage.setItem(\"access_token\" , data.access_token);\n                localStorage.setItem(\"expires_in\" , data.expires_in);\n                localStorage.setItem(\"token_type\" , data.access_token);\n                localStorage.setItem(\"refresh_token\" , data.refresh_token);\n                this.router.navigate(['/']);\n                window.location.reload();\n              },\n              error => {\n                this.router.navigate(['/login']);\n                console.log(error);\n                this.loading = false;\n              },\n              () => {\n                this.loading = false;\n                console.log(\"finish\");\n              }\n          );\n        },\n        error => {\n          this.response = error.status;\n          console.log(error);\n          this.model = new RegisterFormModel(this.model.email,\"\");\n          this.loading = false;\n        },\n        () => {\n          console.log(\"finish\");\n          this.loading = false;\n        }\n    );\n    this.submitted = true;\n\n  }\n\n  get diagnostic() { return JSON.stringify(this.model); }\n}\n"]}