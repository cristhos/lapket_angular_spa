{"version":3,"file":"/home/lithos/Data/Lab/codash/angularSpa/src/app/category/service/category.service.ts","sources":["/home/lithos/Data/Lab/codash/angularSpa/src/app/category/service/category.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAqD;AACrD,sCAA+C;AAC/C,iCAA+B;AAE/B,+DAA4D;AAG5D,IAAa,eAAe;IAK1B,yBAAoB,IAAU,EAAU,aAA6B;QAAjD,SAAI,GAAJ,IAAI,CAAM;QAAU,kBAAa,GAAb,aAAa,CAAgB;QACnE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,GAAC,eAAe,CAAC;QAC/D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,GAAC,sBAAsB,CAAC;IAC9E,CAAC;IAED,kCAAQ,GAAR;IAEA,CAAC;IAED,qCAAW,GAAX,UAAY,KAAQ;QAAR,sBAAA,EAAA,UAAQ;QAClB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,yBAAyB,GAAC,KAAK,CAAC;QAC1D,MAAM,CAAC,IAAI,CAAC,IAAI;aACJ,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;aACb,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAED,2CAAiB,GAAjB,UAAkB,KAAQ;QAAR,sBAAA,EAAA,UAAQ;QACxB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,mCAAmC,GAAC,KAAK,CAAC;QACpE,MAAM,CAAC,IAAI,CAAC,IAAI;aACJ,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;aACb,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAED,2CAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,cAAc,GAAE,EAAE,GAAE,OAAO,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI;aACJ,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;aACb,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAED,4CAAkB,GAAlB,UAAmB,WAAgB;QACjC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,GAAC,cAAc,GAAC,WAAW,GAAC,iBAAiB,CAAC;QAC3E,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,EAAC,WAAW,aAAA,EAAC,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI;aACJ,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC;aACnB,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAED,8CAAoB,GAApB,UAAqB,WAAgB;QACnC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,GAAC,cAAc,GAAC,WAAW,GAAC,uBAAuB,CAAC;QACjF,MAAM,CAAC,IAAI,CAAC,IAAI;aACJ,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;aACb,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IACH,sBAAC;AAAD,CAAC,AAjDD,IAiDC;AAjDY,eAAe;IAD3B,iBAAU,EAAE;qCAMe,WAAI,EAA0B,+BAAa;GAL1D,eAAe,CAiD3B;AAjDY,0CAAe","sourcesContent":["import { Injectable,OnInit }    from '@angular/core';\nimport {  Http, Response} from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport { ApiUrlService } from '../../utils/api-url.service';\n\n@Injectable()\nexport class CategoryService implements OnInit{\n  baseUrl: string;\n  autherBaseUrl:string;\n  url: any;\n\n  constructor(private http: Http, private apiUrlService : ApiUrlService){\n    this.baseUrl = this.apiUrlService.getBaseUrl()+'/api/category';\n    this.autherBaseUrl = this.apiUrlService.getBaseUrl()+'/api/category_follow';\n  }\n\n  ngOnInit(){\n    \n  }\n\n  getCategory(limit=20){\n    this.url = this.baseUrl + '/categories.json?limit='+limit;\n    return this.http\n               .get(this.url)\n               .map(res => res.json());\n  }\n\n  getCategoryFollow(limit=20){\n    this.url = this.baseUrl + '/my/follow/categories.json?limit='+limit;\n    return this.http\n               .get(this.url)\n               .map(res => res.json());\n  }\n\n  getCategoryDetail(id: any){\n    this.url = this.baseUrl + '/categories/'+ id +'.json';\n    return this.http\n               .get(this.url)\n               .map(res => res.json());\n  }\n\n  postCategoryFollow(category_id: any){\n    this.url = this.autherBaseUrl+'/categories/'+category_id+'/followers.json';\n    let body = JSON.stringify({category_id});\n    return this.http\n               .post(this.url,body)\n               .map(res => res.json());\n  }\n\n  deleteCategoryFollow(category_id: any){\n    this.url = this.autherBaseUrl+'/categories/'+category_id+'/follower/remove.json';\n    return this.http\n               .get(this.url)\n               .map(res => res.json());\n  }\n}\n"]}